## Guide / instructions : 

import setConfig and passwordValidation

"import { passwordValidation} from "enigm_x_validation" "
"import { setConfig} from "enigm_x_validation" "


setConfig function:
    user must add 2 arguments:
    1. "password" - the name of the configuration section
    2. an Object of the password configuration as following: 
    strengthOptions: [
    {
      
      value: 'Weak',
      minDiversity: 1,
      minLength: 8,
    },

    {
      
      value: 'Medium',
      minDiversity: 3,
      minLength: 10,
    },

    {
      
      value: 'Strong',
      minDiversity: 4,
      minLength: 12,
    },
  ],

  characterLen: 8,
  upperCase: 1,
  lowerCase: 1,
  num: 1,
  symbol: '#?!@$%^&*-',
});
   

1.Password validation - if one or more arguments are not necessary MUST pass 0 or empty string.
examples (strengthOptions should look like the example below.) :
    setConfig('password', { strengthOptions:[...] charLen: 12, upperCase: 0, lowerCase: 2, num: 1, symbol: '' })
    or 
    setConfig('password', { strengthOptions:[...] charLen: 12, upperCase: 0, lowerCase: 2, num: 1, symbol: '!@$#' })

    
2.Password strength - strength option values must be specificed as its shown below.
                      value:The name you want to present to the user.
                      minDiversity: minimum number of unique chars ("!@#$")
                      minLength: minimum length of the password string.


                  example:
                      setConfig('password',{strengthOptions:[
                        {
      
                             value: 'Weak',
                             minDiversity: 1,
                             minLength: 8,
                        },

                        {
                                
                             value: 'Medium',
                             minDiversity: 3,
                             minLength: 10,
                        },

                        {
                                
                             value: 'Strong',
                             minDiversity: 4,
                             minLength: 12,
                         },
                          ]})
                
Each of the section no need to be added to the setConfig function incase you want to use the default value's 
when setConfig has been called, 
call the "passwordValidation" function with the password(String type) arguments
passwordValidation('124mlikh!lA#@')

passwordValidation function will return an objects with following properties:
    validation : shows an array of objects of the user configuration parameters 
                 and each have a "valid" property as Boolean value.
    strength : will return a string of strength, 3 options : "weak" , "Strong" , "Very Strong"

example of passwordValidation return statement:
  {
  validation: 
  [    
    { title: 'Char', valid: true, re: /^.{12,}$/ },
    { title: 'LowerCase', valid: true, re: /^(.*?[a-z]){2,}/ },    
    { title: 'Number', valid: true, re: /^(.*?[0-9]){1,}/ }
  ],
  strength: 'Strong'
}